{"ast":null,"code":"var _jsxFileName = \"/Users/yangxc/Desktop/react2-alpha-Xuechun19/src/Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showModal: false,\n      key: props.key,\n      course: props.course,\n      rating: 0\n    };\n  }\n\n  getRequisites() {\n    var allRequisites = this.state.course.requisites;\n\n    if (allRequisites.length === 0) {\n      return \"None\";\n    }\n\n    var requisitesString = \"\";\n\n    for (let i = 0; i < allRequisites.length; i++) {\n      for (let j = 0; j < allRequisites[i].length; j++) {\n        if (j === 0) {\n          requisitesString = requisitesString.concat(\"(\");\n        }\n\n        requisitesString = requisitesString.concat(allRequisites[i][j]);\n\n        if (j !== allRequisites[i].length - 1) {\n          requisitesString = requisitesString.concat(\" OR \");\n        } else {\n          requisitesString = requisitesString.concat(\")\");\n        }\n      }\n\n      if (i !== allRequisites.length - 1) {\n        requisitesString = requisitesString.concat(\" AND \");\n      }\n    }\n\n    return requisitesString;\n  }\n\n  setAllKeywords() {\n    return this.state.course.keywords.join(\", \");\n  }\n\n  updateRating(rating) {\n    this.setState({\n      rating: rating\n    });\n  }\n\n  render() {\n    const course = this.state.course;\n\n    if (this.props.mode === \"completed\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          color: \"#841584\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, course, \" \"), \" \"), React.createElement(\"button\", {\n        onClick: () => {\n          this.updateRating(1);\n          this.props.updateRatings(course, 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" 1 \"), React.createElement(\"button\", {\n        onClick: () => {\n          this.updateRating(2);\n          this.props.updateRatings(course, 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" 2 \"), React.createElement(\"button\", {\n        onClick: () => {\n          this.updateRating(3);\n          this.props.updateRatings(course, 3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \" 3 \"), React.createElement(\"button\", {\n        onClick: () => {\n          this.updateRating(4);\n          this.props.updateRatings(course, 4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" 4 \"), React.createElement(\"button\", {\n        onClick: () => {\n          this.updateRating(5);\n          this.props.updateRatings(course, 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" 5 \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Your rating is \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.rating), \".\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"-----------------------------------------\")));\n    } else if (this.props.mode === \"recommend\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        style: {\n          color: \"#794c74\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"(\", course.number, \") \", course.name), \" | (\", course.credits, \" Credits) \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Subject\"), \": \", course.subject, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", course.description, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Requisites\"), \": \", this.getRequisites(), \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Keywords\"), \": \", this.setAllKeywords(), \" \"));\n    } else {\n      return React.createElement(Card, {\n        style: {\n          width: '33%',\n          marginTop: '5px',\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          maxWidth: 250\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.props.data.name), this.getExpansionButton()), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.data.number, \" - \", this.getCredits()), this.getDescription(), React.createElement(Button, {\n        variant: \"dark\",\n        onClick: () => this.openModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"View sections\")), React.createElement(Modal, {\n        show: this.state.showModal,\n        onHide: () => this.closeModal(),\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.data.name)), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Click Cards Below for More Details \", this.getSections()), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.getCourseButton(), React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: () => this.closeModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }\n\n  getCourseButton() {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = () => this.addCourse();\n\n    let buttonText = 'Add Course';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      buttonVariant = 'outline-dark';\n\n      buttonOnClick = () => this.removeCourse();\n\n      buttonText = 'Remove Course';\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  getSections() {\n    let sections = [];\n\n    for (let i = 0; i < this.props.data.sections.length; i++) {\n      sections.push(React.createElement(Card, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Section_\" + i, this.getSectionButton(i)), React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Instructor: \", JSON.stringify(this.props.data.sections[i].instructor), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \"Time: \", JSON.stringify(this.props.data.sections[i].time), this.getSubsections(i, this.props.data.sections[i])))));\n    }\n\n    return React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, sections);\n  }\n\n  getSectionButton(section) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSection(e, section);\n\n    let buttonText = 'Add Section';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        buttonVariant = 'outline-dark';\n\n        buttonOnClick = e => this.removeSection(e, section);\n\n        buttonText = 'Remove Section';\n      }\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  addCourse() {\n    this.props.addCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  removeCourse() {\n    this.props.removeCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  addSection(e, section) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  removeSection(e, section) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  addSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  removeSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  getSubsections(sectionKey, sectionValue) {\n    let subsections = [];\n\n    for (let i = 0; i < sectionValue.subsections.length; i++) {\n      subsections.push(React.createElement(Card, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Sub_\" + i, this.getSubsectionButton(sectionKey, i)), React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Time: \", JSON.stringify(sectionValue.subsections[i].time)))));\n    }\n\n    return React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, subsections);\n  }\n\n  getSubsectionButton(section, subsection) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSubsection(e, section, subsection);\n\n    let buttonText = 'Add Subsection';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        if (this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\n          buttonVariant = 'outline-dark';\n\n          buttonOnClick = e => this.removeSubsection(e, section, subsection);\n\n          buttonText = 'Remove Subsection';\n        }\n      }\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/yangxc/Desktop/react2-alpha-Xuechun19/src/Course.js"],"names":["React","Card","Button","Modal","Accordion","Course","Component","constructor","props","state","expanded","showModal","key","course","rating","getRequisites","allRequisites","requisites","length","requisitesString","i","j","concat","setAllKeywords","keywords","join","updateRating","setState","render","mode","color","updateRatings","number","name","credits","subject","description","width","marginTop","marginBottom","maxWidth","data","getExpansionButton","getCredits","getDescription","openModal","closeModal","getSections","getCourseButton","buttonVariant","buttonOnClick","addCourse","buttonText","courseKey","cartCourses","removeCourse","sections","push","Header","height","display","alignItems","getSectionButton","JSON","stringify","instructor","time","getSubsections","section","e","addSection","removeSection","position","right","addCartCourse","removeCartCourse","stopPropagation","addSubsection","subsection","removeSubsection","sectionKey","sectionValue","subsections","getSubsectionButton","indexOf","setExpanded","value","fontSize","padding","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false,\r\n      key: props.key,\r\n      course: props.course,\r\n      rating: 0\r\n    }\r\n  }\r\n  getRequisites() {\r\n    var allRequisites = this.state.course.requisites;\r\n    if (allRequisites.length === 0) {\r\n      return \"None\";\r\n    }\r\n    var requisitesString = \"\";\r\n    for (let i = 0; i < allRequisites.length; i++) {\r\n      for (let j = 0; j < allRequisites[i].length; j++) {\r\n        if (j === 0) {\r\n          requisitesString = requisitesString.concat(\"(\");\r\n        }\r\n        requisitesString = requisitesString.concat(allRequisites[i][j]);\r\n        if (j !== allRequisites[i].length - 1) {\r\n          requisitesString = requisitesString.concat(\" OR \");\r\n        } else {\r\n          requisitesString = requisitesString.concat(\")\");\r\n        }\r\n      }\r\n      if (i !== allRequisites.length - 1) {\r\n        requisitesString = requisitesString.concat(\" AND \");\r\n      }\r\n    }\r\n    return requisitesString;\r\n  }\r\n\r\n  setAllKeywords() {\r\n    return this.state.course.keywords.join(\", \");\r\n  }\r\n  updateRating(rating) {\r\n    this.setState({ rating: rating })\r\n  }\r\n\r\n  render() {\r\n    const course = this.state.course;\r\n    if (this.props.mode === \"completed\") {\r\n      return (\r\n        \r\n        <div>\r\n          \r\n          <br></br>\r\n          {/* <p style={{ width: 50, height: 50, backgroundColor: 'powderblue'}}>Rate for your taken class</p> */}\r\n          <br></br>\r\n\r\n          <h1 style={{ color: \"#841584\" }}> <b>{course} </b> </h1>\r\n          \r\n          \r\n          <button onClick={() => { this.updateRating(1); this.props.updateRatings(course, 1) }}> 1 </button>\r\n          <button onClick={() => { this.updateRating(2); this.props.updateRatings(course, 2) }}> 2 </button>\r\n          <button onClick={() => { this.updateRating(3); this.props.updateRatings(course, 3) }}> 3 </button>\r\n          <button onClick={() => { this.updateRating(4); this.props.updateRatings(course, 4) }}> 4 </button>\r\n          <button onClick={() => { this.updateRating(5); this.props.updateRatings(course, 5) }}> 5 </button>\r\n          <br></br>        \r\n          <br></br>\r\n          \r\n          <h4> Your rating is <b>{this.state.rating}</b>.</h4>\r\n          <p><b>-----------------------------------------</b></p>\r\n        </div>\r\n        \r\n      )\r\n    }else if (this.props.mode === \"recommend\") {\r\n      return (\r\n        <div>\r\n          <br></br>\r\n          <h3 style={{ color: \"#794c74\" }}> <b>({course.number}) {course.name}</b> | ({course.credits} Credits) </h3>\r\n          <p> <b>Subject</b>: {course.subject} </p>\r\n          <p> {course.description} </p>\r\n          <p> <b>Requisites</b>: {this.getRequisites()} </p>\r\n          <p> <b>Keywords</b>: {this.setAllKeywords()} </p>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n\r\n      return(\r\n          \r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <div style={{maxWidth: 250}}>\r\n              {this.props.data.name}\r\n            </div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant='dark' onClick={() => this.openModal()}>View sections</Button>\r\n        </Card.Body>\r\n        <Modal show={this.state.showModal} onHide={() => this.closeModal()} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n           Click Cards Below for More Details {this.getSections()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {this.getCourseButton()}\r\n            <Button variant=\"secondary\" onClick={() => this.closeModal()}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card>\r\n        \r\n      )\r\n      \r\n    }\r\n  }\r\n    \r\n  \r\n\r\n  getCourseButton() {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = () => this.addCourse();\r\n    let buttonText = 'Add Course';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      buttonVariant = 'outline-dark';\r\n      buttonOnClick = () => this.removeCourse();\r\n      buttonText = 'Remove Course'\r\n    }\r\n\r\n    return (\r\n      <Button variant={buttonVariant} onClick={buttonOnClick}>\r\n        {buttonText}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  getSections() {\r\n\r\n    let sections = [];\r\n    for (let i =0; i < this.props.data.sections.length; i++){\r\n     \r\n      sections.push (\r\n          <Card key={i}>\r\n            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n              {\"Section_\" + i}\r\n              {this.getSectionButton(i)}              \r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey={i}>\r\n              {/* <Card.Subtitle style={{fontWeight: \"bold\", fontSize: 20, color: '#191970'}}>Know More</Card.Subtitle> */}\r\n              <Card.Body>\r\n                Instructor: {JSON.stringify(this.props.data.sections[i].instructor)}\r\n                <br></br>\r\n                Time: {JSON.stringify(this.props.data.sections[i].time)}\r\n                {this.getSubsections(i, this.props.data.sections[i])}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          \r\n          </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {sections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSectionButton(section) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSection(e, section);\r\n    let buttonText = 'Add Section';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        buttonVariant = 'outline-dark';\r\n        buttonOnClick = (e) => this.removeSection(e, section);\r\n        buttonText = 'Remove Section';\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  addCourse() {\r\n    \r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  removeCourse() {\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n      }\r\n    );\r\n  }\r\n\r\n  addSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  addSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getSubsections(sectionKey, sectionValue) {\r\n    let subsections = [];\r\n\r\n    for (let i =0; i < sectionValue.subsections.length; i++){  \r\n    subsections.push (\r\n        <Card key={i}>\r\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n           {\"Sub_\"+i}\r\n            {this.getSubsectionButton(sectionKey, i)}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={i}>\r\n            <Card.Body>\r\n            \r\n              Time: {JSON.stringify(sectionValue.subsections[i].time)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {subsections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSubsectionButton(section, subsection) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSubsection(e, section, subsection);\r\n    let buttonText = 'Add Subsection';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        if(this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\r\n          buttonVariant = 'outline-dark';\r\n          buttonOnClick = (e) => this.removeSubsection(e, section, subsection);\r\n          buttonText = 'Remove Subsection';\r\n        }\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({showModal: true});\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({showModal: false});\r\n  }\r\n\r\n  setExpanded(value) {\r\n    this.setState({expanded: value});\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = '▼';\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if(this.state.expanded) {\r\n      buttonText = '▲';\r\n      buttonOnClick = () => this.setExpanded(false)\r\n    }\r\n\r\n    return (\r\n      <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\r\n    )\r\n  }\r\n\r\n  getDescription() {\r\n    if(this.state.expanded) {\r\n      return (\r\n        <div>\r\n          {this.props.data.description}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}